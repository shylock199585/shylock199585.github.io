<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo搭建过程</title>
    <url>/2017/06/18/hexo%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>这里只列出 hexo 的简明搭建方法，不讲“是什么”和“为什么”，关于 hexo 的更多配置和用法请前往 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo Docs</a>  了解。</p>
<h4 id="Node-js-环境"><a href="#Node-js-环境" class="headerlink" title="Node.js 环境"></a>Node.js 环境</h4><p>必须安装Node，方式任选，不多说</p>
<h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>通过 Node 的 npm 安装 Hexo，命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo npm i -g hexo-cli</span><br></pre></td></tr></table></figure>

<h4 id="Hexo-初始化"><a href="#Hexo-初始化" class="headerlink" title="Hexo 初始化"></a>Hexo 初始化</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt; <span class="comment"># 初始化项目名称 </span></span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt; </span><br><span class="line">$ npm install <span class="comment"># 安装模块</span></span><br></pre></td></tr></table></figure>

<h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean <span class="comment"># 必要时，清除上次生成页面时造成的缓存 </span></span><br><span class="line">$ hexo g  <span class="comment"># 生成静态页面 </span></span><br><span class="line">$ hexo s  <span class="comment"># 在本地启动Hexo，可以在浏览器访问 localhost:4000 来预览</span></span><br></pre></td></tr></table></figure>

<h4 id="GitHub-支持"><a href="#GitHub-支持" class="headerlink" title="GitHub 支持"></a>GitHub 支持</h4><p>首先在 GitHub 按照 <code>username.github.io</code> 的格式新建仓库，之后在项目根目录下执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm i hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>打开 <code>_config.yml</code> ，编辑 <code>deploy</code>字段，注意替换用户名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yourusername&#x2F;yourusername.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>配置完成后，只需执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<p>即可将本地内容部署在 GitHub 中，输入域名 <code>username.github.io</code> 进行访问</p>
<h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><blockquote>
<p>如果不喜欢默认主题，可以参考如下方式更改。</p>
</blockquote>
<p>要把主题更换为Next，先定位到Hexo站点目录进行安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>之后打开站点配置文件 <code>_config.yml</code>，修改 <code>theme</code> 字段值为 <code>next</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<h4 id="修改Scheme"><a href="#修改Scheme" class="headerlink" title="修改Scheme"></a>修改Scheme</h4><p>Next主题提供了3种Scheme，也决定了外观细节，需要在主题配置文件 <code>themes/next/_config.yml</code> 中进行修改，通过注释和反注释三选一。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br></pre></td></tr></table></figure>
<h4 id="修改菜单"><a href="#修改菜单" class="headerlink" title="修改菜单"></a>修改菜单</h4><p>在主题配置文件中，找到 <code>menu</code> 字段并进行适当修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;</span><br><span class="line">  archives: &#x2F;archives</span><br><span class="line">  about: &#x2F;about</span><br><span class="line">  #categories: &#x2F;categories</span><br><span class="line">  tags: &#x2F;tags</span><br><span class="line">  #commonweal: &#x2F;404.html</span><br></pre></td></tr></table></figure>
<h4 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h4><p>同样在主题配置文件中修改 <code>avatar</code> 字段，可以参照注释把avatar图片存在 <code>next/source/images</code> 目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line"># in theme directory(source&#x2F;images): &#x2F;images&#x2F;avatar.jpg</span><br><span class="line"># in site  directory(source&#x2F;uploads): &#x2F;uploads&#x2F;avatar.jpg</span><br><span class="line">avatar: &#x2F;images&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure>
<h4 id="阅读统计"><a href="#阅读统计" class="headerlink" title="阅读统计"></a>阅读统计</h4><p>为文章增加字数统计和阅读时长字段，需要安装wordcount</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-wordcount --save</span><br></pre></td></tr></table></figure>
<p>最新的2017 next主题已经内置了<code>hexo-wordcount</code>，接下来就可以在主题配置文件<code>_config.yml</code>中，修改如下配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;willin&#x2F;hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure>
<p>关于单篇博客阅读人数的统计，我使用了<code>LeanCloud</code>，而非<code>不蒜子</code>，同样都在next主题中内置。主要原因是<code>不蒜子</code>不能在首页显示阅读统计，此外<code>LeanCloud</code>还提供了一定的管理功能。需要在主题配置文件中修改如下字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https:&#x2F;&#x2F;leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: </span><br><span class="line">  app_key:</span><br></pre></td></tr></table></figure>

<h4 id="进阶设定"><a href="#进阶设定" class="headerlink" title="进阶设定"></a>进阶设定</h4><p>官方文档介绍的很详细，请首先查阅<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next使用文档</a></p>
<h3 id="遇到的坑和问题汇总"><a href="#遇到的坑和问题汇总" class="headerlink" title="遇到的坑和问题汇总"></a>遇到的坑和问题汇总</h3><h4 id="404页面配置"><a href="#404页面配置" class="headerlink" title="404页面配置"></a>404页面配置</h4><p>常规的方法是在主题目录即 <code>theme/next/source</code> 下新建 <code>404.html</code> 文件，修改主题配置文件中的<code>commonweal</code>字段，在本地预览404就能看到对应界面。但是，这么配置到GitHub pages就访问不到404页面了。</p>
<blockquote>
<p>网上给出原因是404页面只能绑定顶级域名，如果只用github.io，404页面就失去效果。</p>
</blockquote>
<p>其实，主要原因是Github Pages强制使用https，所以文档内对js和css的请求也都需要经过https才能传输，而腾讯公益404页面默认使用http。<br>所以，只要把出问题的js文件拿到本地进行修改就好了~</p>
<ul>
<li>原本的search_children.js</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _base = <span class="string">'http://qzone.qq.com/gy/404/'</span>;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'&lt;script type="text/javascript" src="'</span> + _base + <span class="string">'data.js" charset="utf-8"&gt;&lt;/script&gt;'</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'&lt;script type="text/javascript" src="'</span> + _base + <span class="string">'page.js" charset="utf-8"&gt;&lt;/script&gt;'</span>);</span><br></pre></td></tr></table></figure>

<p>初次修改为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _base = <span class="string">'https://qzone.qq.com/gy/404/'</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>控制台发现仍然有js文件没有加载进来，阅读 <code>page.js</code> 的代码后明白了，于是 <code>page.js</code> 也拿到本地，修改必要的url为https，终于显示正常了<br>但是有一行貌似没什么用的代码，注释掉了</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// getData("http://boss.qzone.qq.com/fcg-bin/fcg_zone_info");</span></span><br></pre></td></tr></table></figure>

<ul>
<li>为了增强可读性，移除上述js文件，代码直接写入HTML。但出现新问题，返回链接变成默认的腾讯主页了。<br>解决办法是修改 <code>page.js</code> 中如下判断语句条件， <code>search_children.js</code> 改为 <code>data.js</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (scs[i].src.indexOf(<span class="string">"/404/search_children.js"</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (scs[i].getAttribute(<span class="string">"homePageUrl"</span>)) &#123;</span><br><span class="line">    homePageUrl = scs[i].getAttribute(<span class="string">"homePageUrl"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (scs[i].getAttribute(<span class="string">"homePageName"</span>)) &#123;</span><br><span class="line">    homePageName = scs[i].getAttribute(<span class="string">"homePageName"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>虽然页面能正常显示了，但控制台提示提取到的儿童图片url仍然是http，解决这个问题需要在 <code>page.js</code> 中的 <code>resolveData(d)</code> 函数中对数据格式化。<br>在其中的for循环添加一行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d.data[i].child_pic &#x3D; d.data[i].child_pic.replace(&#x2F;^http&#x2F;, &quot;https&quot;);</span><br></pre></td></tr></table></figure>

<ul>
<li>Finally! 发现了新版的 <code>http://www.qq.com/404/</code> ，logo也更美观了，果断修改。代码再次整洁了，完整如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;Claude&#39;s Home - 404&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8;&quot;&#x2F;&gt;</span><br><span class="line">  &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge,chrome&#x3D;1&quot;&#x2F;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;all&quot;&#x2F;&gt;</span><br><span class="line">  &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;index,follow&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;</span><br><span class="line">        src&#x3D;&quot;https:&#x2F;&#x2F;qzonestyle.gtimg.cn&#x2F;qzone&#x2F;hybrid&#x2F;app&#x2F;404&#x2F;search_children.js&quot;</span><br><span class="line">        charset&#x3D;&quot;utf-8&quot;</span><br><span class="line">        homePageUrl&#x3D;&quot;https:&#x2F;&#x2F;claude-ray.github.io&#x2F;&quot;</span><br><span class="line">        homePageName&#x3D;&quot;回到我的主页&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<p>感觉瞎折腾了 XD ！</p>
<h4 id="About页面"><a href="#About页面" class="headerlink" title="About页面"></a>About页面</h4><p>相同主题下，查看他人的 <code>about</code> 页面时，侧栏 <code>sidebar</code> 不会自动弹出，而我的居然会弹出……<br>难道因为 <code>#</code> 标题被当做post了？强迫症下查阅了很多相关文章，还没有发现官方的解决方案，看他们博客的意思是搭建的过程中也仅用了<code>hexo new page about</code>。<br>但回头一想，反正也不难看，就舒舒服服地按 <code>Markdown</code> 的习惯写着吧。</p>
<p>临时解决方案：<br>可以通过在 Markdown 中插入 HTML 标签的方法，移除Markdown的标题判定。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
